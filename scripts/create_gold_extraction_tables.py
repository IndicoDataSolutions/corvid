"""

Dict of gold tables by paper id

"""

from corvid.types.table import Token, Cell, Table


# TODO: call a tokenizer here to split text into list of tokens
def text2cell(text: str, rowspan: int, colspan: int) -> Cell:
    return Cell(tokens=[Token(text=text)], rowspan=rowspan, colspan=colspan)

pdfs = {
    '0ad9e1f04af6a9727ea7a21d0e9e3cf062ca6d75': [
        Table.create_from_cells(cells=[
            Cell(tokens=[Token('')], rowspan=1, colspan=2),
            Cell(tokens=[Token('German'), Token('('), Token('de'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('English'), Token('('), Token('en'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('Spanish'), Token('('), Token('es'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('French'), Token('('), Token('fr'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('Italian'), Token('('), Token('it'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('Portuguese'), Token('('), Token('pt'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('Swedish'), Token('('), Token('sv'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('UDT'), Token('2')], rowspan=3, colspan=1),
            Cell(tokens=[Token('train')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14118'), Token('('), Token('264906'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('39832'), Token('('), Token('950028'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14138'), Token('('), Token('375180'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14511'), Token('('), Token('351233'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('6389'), Token('('), Token('149145'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('9600'), Token('('), Token('239012'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('4447'), Token('('), Token('66631'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('dev'), Token('.')], rowspan=1, colspan=1),
            Cell(tokens=[Token('801'), Token('('), Token('12215'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1703'), Token('('), Token('40117'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1579'), Token('('), Token('40950'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1620'), Token('('), Token('38328'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('399'), Token('('), Token('9541'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1211'), Token('('), Token('29873'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('493'), Token('('), Token('9312'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('test')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1001'), Token('('), Token('16339'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('2416'), Token('('), Token('56684'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('300'), Token('('), Token('8295'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('300'), Token('('), Token('6950'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('400'), Token('('), Token('9187'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1205'), Token('('), Token('29438'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1219'), Token('('), Token('20376'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('UDT'), Token('1'), Token('.'), Token('2')], rowspan=4, colspan=1),
            Cell(tokens=[Token('train')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14118'), Token('('), Token('269626'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('12543'), Token('('), Token('204586'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14187'), Token('('), Token('382436'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('14552'), Token('('), Token('355811'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('11699'), Token('('), Token('249307'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('8800'), Token('('), Token('201845'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('4303'), Token('('), Token('66645'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('dev'), Token('.')], rowspan=1, colspan=1),
            Cell(tokens=[Token('799'), Token('('), Token('12512'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('2002'), Token('('), Token('25148'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1552'), Token('('), Token('41975'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1596'), Token('('), Token('39869'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('489'), Token('('), Token('11656'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('271'), Token('('), Token('4833'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('504'), Token('('), Token('9797'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('test')], rowspan=1, colspan=1),
            Cell(tokens=[Token('977'), Token('('), Token('16537'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('2077'), Token('('), Token('25096'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('274'), Token('('), Token('8128'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('298'), Token('('), Token('7210'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('489'), Token('('), Token('11719'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('288'), Token('('), Token('5867'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('1219'), Token('('), Token('20377'), Token(')')], rowspan=1, colspan=1),
            Cell(tokens=[Token('tags')], rowspan=1, colspan=1),
            Cell(tokens=[Token('-')], rowspan=1, colspan=1),
            Cell(tokens=[Token('50')], rowspan=1, colspan=1),
            Cell(tokens=[Token('-')], rowspan=1, colspan=1),
            Cell(tokens=[Token('-')], rowspan=1, colspan=1),
            Cell(tokens=[Token('36')], rowspan=1, colspan=1),
            Cell(tokens=[Token('866')], rowspan=1, colspan=1),
            Cell(tokens=[Token('134')], rowspan=1, colspan=1),
        ], nrow=8, ncol=9, page_num=5),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('UAS', 1, 1), ('target language', 1, 7), ('average', 1, 1),
                ('', 1, 1), ('de', 1, 1), ('en', 1, 1), ('es', 1, 1), ('fr', 1, 1), ('it', 1, 1), ('pt', 1, 1), ('sv', 1, 1), ('', 1, 1),
                ('monolingual', 1, 1), ('84.5', 1, 1), ('88.7', 1, 1), ('88.7', 1, 1), ('85.6', 1, 1), ('91.1', 1, 1), ('89.1', 1, 1), ('87.2', 1, 1), ('87.6', 1, 1),
                ('language-universal', 1, 1), ('78.8', 1, 1), ('75.6', 1, 1), ('80.6', 1, 1), ('79.7', 1, 1), ('84.7', 1, 1), ('81.6', 1, 1), ('77.6', 1, 1), ('79.8', 1, 1),
                ('+lexical', 1, 1), ('83.0', 1, 1), ('85.6', 1, 1), ('87.3', 1, 1), ('85.3', 1, 1), ('90.6', 1, 1), ('86.5', 1, 1), ('86.4', 1, 1), ('86.3', 1, 1),
                ('+language ID', 1, 1), ('84.2', 1, 1), ('87.2', 1, 1), ('87.2', 1, 1), ('86.1', 1, 1), ('91.5', 1, 1), ('87.5', 1, 1), ('87.2', 1, 1), ('87.2', 1, 1),
                ('+fine-grained POS', 1, 1), ('84.7', 1, 1), ('88.6', 1, 1), ('88.1', 1, 1), ('86.4', 1, 1), ('91.1', 1, 1), ('89.4', 1, 1), ('88.2', 1, 1), ('88.0', 1, 1)
            ]
        ], nrow=7, ncol=9, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('LAS', 1, 1), ('target language', 1, 7), ('average', 1, 1),
                ('', 1, 1), ('de', 1, 1), ('en', 1, 1), ('es', 1, 1), ('fr', 1, 1), ('it', 1, 1), ('pt', 1, 1), ('sv', 1, 1), ('', 1, 1),
                ('monolingual', 1, 1), ('79.3', 1, 1), ('85.9', 1, 1), ('83.7', 1, 1), ('81.7', 1, 1), ('88.7', 1, 1), ('85.7', 1, 1), ('83.5', 1, 1), ('84.0', 1, 1),
                ('language-universal', 1, 1), ('70.4', 1, 1), ('69.3', 1, 1), ('72.4', 1, 1), ('71.1', 1, 1), ('78.0', 1, 1), ('74.1', 1, 1), ('65.4', 1, 1), ('71.5', 1, 1),
                ('+lexical', 1, 1), ('76.7', 1, 1), ('82.0', 1, 1), ('82.7', 1, 1), ('81.2', 1, 1), ('87.6', 1, 1), ('82.1', 1, 1), ('81.2', 1, 1), ('81.9', 1, 1),
                ('+language ID', 1, 1), ('78.6', 1, 1), ('84.2', 1, 1), ('83.4', 1, 1), ('82.4', 1, 1), ('89.1', 1, 1), ('84.2', 1, 1), ('82.6', 1, 1), ('83.5', 1, 1),
                ('+fine-grained POS', 1, 1), ('78.9', 1, 1), ('85.4', 1, 1), ('84.3', 1, 1), ('82.4', 1, 1), ('89.0', 1, 1), ('86.2', 1, 1), ('84.5', 1, 1), ('84.3', 1, 1)
            ]
        ], nrow=7, ncol=9, page_num=6)
    ],
    '3fcfbf6b5231654d052d97701707dccfdd42e353': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Approach', 1, 1), ('Precision', 1, 1), ('Recall', 1, 1), ('F1', 1, 1),
                ('Stanford', 1, 1), ('85.88', 1, 1), ('50.00', 1, 1), ('63.20', 1, 1),
                ('Ritter', 1, 1), ('77.23', 1, 1), ('80.18', 1, 1), ('78.68', 1, 1),
                ('MaxEnt', 1, 1), ('86.92', 1, 1), ('59.09', 1, 1), ('70.35', 1, 1),
                ('SVM', 1, 1), ('77.55', 1, 1), ('59.16', 1, 1), ('67.11', 1, 1),
                ('SVM/UM', 1, 1), ('73.26', 1, 1), ('69.63', 1, 1), ('71.41', 1, 1),
                ('CRF', 1, 1), ('82.94', 1, 1), ('62.39', 1, 1), ('71.21', 1, 1),
                ('CRF/PA', 1, 1), ('80.37', 1, 1), ('65.57', 1, 1), ('72.22', 1, 1)
            ]
        ], nrow=8, ncol=4, page_num=3),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Approach', 1, 1), ('Precision', 1, 1), ('Recall', 1, 1), ('F1', 1, 1),
                ('Stanford', 1, 1), ('90.60', 1, 1), ('60.00', 1, 1), ('72.19', 1, 1),
                ('Ritter', 1, 1), ('77.23', 1, 1), ('80.18', 1, 1), ('78.68', 1, 1),
                ('MaxEnt', 1, 1), ('91.10', 1, 1), ('66.33', 1, 1), ('76.76', 1, 1),
                ('SVM', 1, 1), ('88.22', 1, 1), ('66.58', 1, 1), ('75.89', 1, 1),
                ('SVM/UM', 1, 1), ('81.16', 1, 1), ('74.97', 1, 1), ('77.94', 1, 1),
                ('CRF', 1, 1), ('89.52', 1, 1), ('70.52', 1, 1), ('78.89', 1, 1),
                ('CRF/PA', 1, 1), ('86.85', 1, 1), ('74.71', 1, 1), ('80.32', 1, 1)
            ]
        ], nrow=8, ncol=4, page_num=3),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Entity length (tokens)', 1, 1), ('Count', 1, 1),
                ('1', 1, 1), ('610', 1, 1),
                ('2', 1, 1), ('1065', 1, 1),
                ('3', 1, 1), ('51', 1, 1),
                ('4', 1, 1), ('15', 1, 1)
            ]
        ], nrow=5, ncol=2, page_num=3),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 1), ('', 1, 1), ('Overall', 1, 3),
                ('Method', 1, 1), ('Missed entity F1', 1, 1), ('P', 1, 1), ('R', 1, 1), ('F1', 1, 1),
                ('No editing - plain CRF/PA', 1, 1), ('0.0', 1, 1), ('86.85', 1, 1), ('74.71', 1, 1), ('80.32', 1, 1),
                ('Naive: trigger token only', 1, 1), ('5.82', 1, 1), ('86.61', 1, 1), ('78.91', 1, 1), ('82.58', 1, 1),
                ('Naive: trigger plus one', 1, 1), ('6.05', 1, 1), ('81.26', 1, 1), ('82.08', 1, 1), ('81.67', 1, 1),
                ('SVM editor, Cost = 0.1', 1, 1), ('78.26', 1, 1), ('87.38', 1, 1), ('79.16', 1, 1), ('83.07', 1, 1),
                ('SVM editor, Cost = 0.5', 1, 1), ('89.72', 1, 1), ('87.17', 1, 1), ('80.30', 1, 1), ('83.60', 1, 1),
                ('SVM editor, Cost = 1.0', 1, 1), ('90.74', 1, 1), ('87.19', 1, 1), ('80.43', 1, 1), ('83.67', 1, 1),
                ('SVM editor, Cost = 1.5', 1, 1), ('92.73', 1, 1), ('87.23', 1, 1), ('80.69', 1, 1), ('83.83', 1, 1),
                ('SVM editor, Cost = 2.0', 1, 1), ('92.73', 1, 1), ('87.23', 1, 1), ('80.69', 1, 1), ('83.83', 1, 1)
            ]
        ], nrow=10, ncol=5, page_num=4)
    ],
    '5f06240ed072915012ba0e8ef9b09e8119a9bd31': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 1), ('Classification', 1, 1), ('Parsing Accuracy', 1, 3), ('', 1, 1), ('', 1, 1),
                ('Model', 1, 1), ('Accuracy', 1, 1), ('LR', 1, 1), ('LP', 1, 1), ('F1', 1, 1), ('Fail', 1, 1), ('Time', 1, 1),
                ('SVM', 1, 1), ('94.3%', 1, 1), ('86.9%', 1, 1), ('87.9%', 1, 1), ('87.4%', 1, 1), ('0', 1, 1), ('3m 19s', 1, 1),
                ('Maxent', 1, 1), ('92.6%', 1, 1), ('84.1%', 1, 1), ('85.2%', 1, 1), ('84.6%', 1, 1), ('5', 1, 1), ('0m 21s', 1, 1),
                ('DTree1', 1, 1), ('92.0%', 1, 1), ('78.8%', 1, 1), ('80.3%', 1, 1), ('79.5%', 1, 1), ('42', 1, 1), ('0m 12s', 1, 1),
                ('DTree2', 1, 1), ('N/A', 1, 1), ('81.6%', 1, 1), ('83.6%', 1, 1), ('82.6%', 1, 1), ('30', 1, 1), ('0m 18s', 1, 1),
                ('MBL', 1, 1), ('90.6%', 1, 1), ('74.3%', 1, 1), ('75.2%', 1, 1), ('74.7%', 1, 1), ('2', 1, 1), ('16m 11s', 1, 1),
            ]
        ], nrow=7, ncol=7, page_num=4),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('MODEL', 2, 1), ('≤ 40 words', 1, 4), ('≤ 100 words', 1, 4), ('Unlimited', 1, 4),
                ('LR', 1, 1), ('LP', 1, 1), ('F1', 1, 1), ('POS', 1, 1),
                    ('LR', 1, 1), ('LP', 1, 1), ('F1', 1, 1), ('POS', 1, 1),
                        ('LR', 1, 1), ('LP', 1, 1), ('F1', 1, 1), ('POS', 1, 1),
                ('Bikel & Chiang 2000', 1, 1), ('76.8%', 1, 1), ('77.8%', 1, 1), ('77.3%', 1, 1), ('-', 1, 1),
                    ('73.3%', 1, 1), ('74.6%', 1, 1), ('74.0%', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('Levy & Manning 2003', 1, 1), ('79.2%', 1, 1), ('78.4%', 1, 1), ('78.8%', 1, 1), ('-', 1, 1),
                    ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('Xiong et al. 2005', 1, 1), ('78.7%', 1, 1), ('80.1%', 1, 1), ('79.4%', 1, 1), ('-', 1, 1),
                    ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ("Bikel's Thesis 2004", 1, 1), ('78.0%', 1, 1), ('81.2%', 1, 1), ('79.6%', 1, 1), ('-', 1, 1),
                    ('74.4%', 1, 1), ('78.5%', 1, 1), ('76.4%', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('Chiang & Bikel 2002', 1, 1), ('78.8%', 1, 1), ('81.1%', 1, 1), ('79.9%', 1, 1), ('-', 1, 1),
                    ('75.2%', 1, 1), ('78.0%', 1, 1), ('76.6%', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ("Jiang's Thesis 2004", 1, 1), ('80.1%', 1, 1), ('82.0%', 1, 1), ('81.1%', 1, 1), ('92.4%', 1, 1),
                    ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                        ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('Sun & Jurafsky 2004', 1, 1), ('85.5%', 1, 1), ('86.4%', 1, 1), ('85.9%', 1, 1), ('-', 1, 1),
                    ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                        ('83.3%', 1, 1), ('82.2%', 1, 1), ('82.7%', 1, 1), ('-', 1, 1),
                ('DTree model', 1, 1), ('71.8%', 1, 1), ('76.9%', 1, 1), ('74.4%', 1, 1), ('92.5%', 1, 1),
                    ('69.2%', 1, 1), ('74.5%', 1, 1), ('71.9%', 1, 1), ('92.2%', 1, 1),
                        ('68.7%', 1, 1), ('74.2%', 1, 1), ('71.5%', 1, 1), ('92.1%', 1, 1),
                ('SVM model', 1, 1), ('78.1%', 1, 1), ('81.1%', 1, 1), ('79.6%', 1, 1), ('92.5%', 1, 1),
                    ('75.5%', 1, 1), ('78.5%', 1, 1), ('77.0%', 1, 1), ('92.2%', 1, 1),
                        ('75.0%', 1, 1), ('78.0%', 1, 1), ('76.5%', 1, 1), ('92.1%', 1, 1),
                ('Stacked classifier model', 1, 1), ('79.2%', 1, 1), ('81.1%', 1, 1), ('80.1%', 1, 1), ('92.5%', 1, 1),
                    ('76.7%', 1, 1), ('78.4%', 1, 1), ('77.5%', 1, 1), ('92.2%', 1, 1),
                        ('76.2%', 1, 1), ('78.0%', 1, 1), ('77.1%', 1, 1), ('92.1%', 1, 1)
            ]
        ], nrow=12, ncol=13, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('LR', 1, 1), ('LP', 1, 1), ('F1', 1, 1),
                ("Bikel's Thesis 2004", 1, 1), ('80.9%', 1, 1), ('84.5%', 1, 1), ('82.7%', 1, 1),
                ("Jiang's Thesis 2004", 1, 1), ('84.5%', 1, 1), ('88.0%', 1, 1), ('86.2%', 1, 1),
                ('DTree model', 1, 1), ('80.5%', 1, 1), ('83.0%', 1, 1), ('82.2%', 1, 1),
                ('Maxent model', 1, 1), ('81.4%', 1, 1), ('82.8%', 1, 1), ('82.1%', 1, 1),
                ('SVM model', 1, 1), ('87.2%', 1, 1), ('88.3%', 1, 1), ('87.8%', 1, 1),
                ('Stacked classifier model', 1, 1), ('88.3%', 1, 1), ('88.1%', 1, 1), ('88.2%', 1, 1)
            ]
        ], nrow=7, ncol=4, page_num=7),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('runtime', 1, 1),
                ('Bikel', 1, 1), ('54m 6s', 1, 1),
                ('Levy & Manning', 1, 1), ('8m 12s', 1, 1),
                ('Our DTree model', 1, 1), ('0m 14s', 1, 1),
                ('Our Maxent model', 1, 1), ('0m 24s', 1, 1),
                ('Our SVM model', 1, 1), ('3m 50s', 1, 1)
            ]
        ], nrow=6, ncol=2, page_num=7)
    ],
    '15b1c1ad222fc09f80dc5360e621f7fa319e867f': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 1), ('Languages', 1, 5),
                ('Baselines', 1, 1), ('All', 1, 1), ('Sources', 1, 1), ('Targets', 1, 1), ('IE', 1, 1), ('Non-IE', 1, 1),
                ('DELEX-MS', 1, 1), ('45.43⋆', 1, 1), ('45.64⋆', 1, 1), ('44.59⋆', 1, 1), ('49.53⋆', 1, 1), ('34.88†', 1, 1),
                ('DCA-PROJ', 1, 1), ('47.87†', 1, 1), ('47.05⋆', 1, 1), ('47.19⋆', 1, 1), ('51.33†', 1, 1), ('40.66†', 1, 1),
                ('REPARSE', 1, 1), ('47.79⋆', 1, 1), ('47.87⋆', 1, 1), ('47.47⋆', 1, 1), ('51.34⋆', 1, 1), ('38.67⋆', 1, 1),
                ('Our systems', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1),
                ('IBM1 GRAPHS', 1, 1), ('52.82⋆', 1, 1), ('53.01⋆', 1, 1), ('52.07⋆', 1, 1), ('55.44⋆', 1, 1), ('46.08⋆', 1, 1),
                ('TREES', 1, 1), ('53.47⋆', 1, 1), ('53.49⋆', 1, 1), ('53.38⋆', 1, 1), ('55.91⋆', 1, 1), ('47.19⋆', 1, 1),
                ('IBM2 GRAPHS', 1, 1), ('46.44†', 1, 1), ('46.14⋆', 1, 1), ('44.39⋆', 1, 1), ('49.54†', 1, 1), ('38.47†', 1, 1),
                ('TREES', 1, 1), ('46.48†', 1, 1), ('46.67⋆', 1, 1), ('45.54⋆', 1, 1), ('49.58†', 1, 1), ('38.93⋆', 1, 1),
                ('Upper bounds', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1), ('', 1, 1),
                ('DELEX-SB', 1, 1), ('48.52⋆', 1, 1), ('48.64⋆', 1, 1), ('48.02⋆', 1, 1), ('50.91⋆', 1, 1), ('42.35⋆', 1, 1),
                ('SELF-TRAIN', 1, 1), ('—', 1, 1), ('58.38⋆', 1, 1), ('—', 1, 1), ('—', 1, 1), ('—', 1, 1),
                ('FULL', 1, 1), ('—', 1, 1), ('72.55⋆', 1, 1), ('—', 1, 1), ('—', 1, 1), ('—', 1, 1)
            ]
        ], nrow=14, ncol=6, page_num=9)
    ],
    '24f8b76710cc0081e364d89ce972a38ddc787134': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Min', 1, 1), ('Max', 1, 1), ('Mean', 1, 1), ('Hit %', 1, 1), ('Px', 1, 1),
                ('Baseline', 1, 1), ('—', 1, 1), ('—', 1, 1), ('36.0%', 1, 1), ('—', 1, 1), ('—', 1, 1),
                ('Likelihood', 1, 1), ('72.3%', 1, 1), ('90.5%', 1, 1), ('80.1%', 1, 1), ('—', 1, 1), ('—', 1, 1),
                ('Unigram', 1, 1), ('74.7%', 1, 1), ('90.5%', 1, 1), ('80.6%', 1, 1), ('100', 1, 1), ('7.7', 1, 1),
                ('Bigram', 1, 1), ('75.0%', 1, 1), ('92.4%', 1, 1), ('81.6%', 1, 1), ('97', 1, 1), ('4.7', 1, 1),
                ('Trigram', 1, 1), ('69.5%', 1, 1), ('94.1%', 1, 1), ('80.9%', 1, 1), ('88', 1, 1), ('3.3', 1, 1)
            ]
        ], nrow=6, ncol=6, page_num=4)
    ],
    '25e2172e7c75225f24e9dd0e188ec9105db846d8': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Relation', 1, 1), ('P', 1, 1), ('R', 1, 1), ('F1', 1, 1), ('Acc', 1, 1),
                ('Cause-Effect', 1, 1), ('67.3', 1, 1), ('90.2', 1, 1), ('77.1', 1, 1), ('72.5', 1, 1),
                ('Instrument-Agency', 1, 1), ('76.9', 1, 1), ('78.9', 1, 1), ('77.9', 1, 1), ('78.2', 1, 1),
                ('Product-Producer', 1, 1), ('76.2', 1, 1), ('77.4', 1, 1), ('76.8', 1, 1), ('78.2', 1, 1),
                ('Origin-Entity', 1, 1), ('62.2', 1, 1), ('63.9', 1, 1), ('63.0', 1, 1), ('66.7', 1, 1),
                ('Theme-Tool', 1, 1), ('69.2', 1, 1), ('62.1', 1, 1), ('65.5', 1, 1), ('73.2', 1, 1),
                ('Part-Whole', 1, 1), ('65.5', 1, 1), ('73.1', 1, 1), ('69.1', 1, 1), ('76.4', 1, 1),
                ('Content-Container', 1, 1), ('78.8', 1, 1), ('68.4', 1, 1), ('73.2', 1, 1), ('74.3', 1, 1),
                ('Avg', 1, 1), ('70.9', 1, 1), ('73.4', 1, 1), ('71.8', 1, 1), ('72.9', 1, 1)
            ]
        ], nrow=9, ncol=5, page_num=4)
    ],
    '028b3c63812be5ebee9e24d3b8f0efc97a217ef2': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Task', 1, 1), ('Baseline', 1, 1), ('All features', 1, 1), ('Most informative', 1, 1),
                ('polarity', 1, 1), ('67.4', 1, 1), ('74.4', 1, 1), ('72.1', 1, 1),
                ('veridicality', 1, 1), ('73.5', 1, 1), ('77.6', 1, 1), ('79.6', 1, 1),
                ('type', 1, 1), ('58.1', 1, 1), ('64.5', 1, 1), ('77.4', 1, 1)
            ]
        ], nrow=4, ncol=4, page_num=7)
    ],
    '55ca53050fcd29e43d6dcfb7dfc6a602ec5e6878': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 2, 1), ('', 2, 1), ('', 2, 2), ('Source+Target Words', 1, 2), ('Sentence IDs', 1, 2),
                ('BilBOWA', 1, 1), ('BWE SkipGram', 1, 1), ('Bilingual Autoencoders', 1, 1), ('Inverted Index', 1, 1),
                ('Word Alignment (1-AER)', 16, 1),
                    ('GRACA', 6, 1),
                        ('en', 1, 1), ('fr', 1, 1), ('.3653', 1, 1), ('.3538', 1, 1), ('.4376', 1, 1), ('.3499', 1, 1),
                        ('fr', 1, 1), ('en', 1, 1), ('.3264', 1, 1), ('.3676', 1, 1), ('.4488', 1, 1), ('.3995', 1, 1),
                        ('en', 1, 1), ('es', 1, 1), ('.2723', 1, 1), ('.3156', 1, 1), ('.5000', 1, 1), ('.3443', 1, 1),
                        ('es', 1, 1), ('en', 1, 1), ('.2953', 1, 1), ('.3740', 1, 1), ('.5076', 1, 1), ('.4545', 1, 1),
                        ('en', 1, 1), ('pt', 1, 1), ('.3716', 1, 1), ('.3983', 1, 1), ('.4449', 1, 1), ('.3263', 1, 1),
                        ('pt', 1, 1), ('en', 1, 1), ('.3949', 1, 1), ('.4272', 1, 1), ('.4474', 1, 1), ('.3902', 1, 1),
                    ('HANSARDS', 2, 1),
                        ('en', 1, 1), ('fr', 1, 1), ('.3189', 1, 1), ('.3109', 1, 1), ('.4083', 1, 1), ('.3336', 1, 1),
                        ('fr', 1, 1), ('en', 1, 1), ('.3206', 1, 1), ('.3314', 1, 1), ('.4218', 1, 1), ('.3749', 1, 1),
                    ('LAMBERT', 2, 1),
                        ('en', 1, 1), ('es', 1, 1), ('.1576', 1, 1), ('.1897', 1, 1), ('.2960', 1, 1), ('.2268', 1, 1),
                        ('es', 1, 1), ('en', 1, 1), ('.1617', 1, 1), ('.2073', 1, 1), ('.2905', 1, 1), ('.2696', 1, 1),
                    ('MIHALCEA', 2, 1),
                        ('en', 1, 1), ('ro', 1, 1), ('.1621', 1, 1), ('.1848', 1, 1), ('.2366', 1, 1), ('.1951', 1, 1),
                        ('ro', 1, 1), ('en', 1, 1), ('.1598', 1, 1), ('.2042', 1, 1), ('.2545', 1, 1), ('.2133', 1, 1),
                    ('HOLMQVIST', 2, 1),
                        ('en', 1, 1), ('sv', 1, 1), ('.2092', 1, 1), ('.2373', 1, 1), ('.2746', 1, 1), ('.2357', 1, 1),
                        ('sv', 1, 1), ('en', 1, 1), ('.2121', 1, 1), ('.2853', 1, 1), ('.2994', 1, 1), ('.2881', 1, 1),
                    ('CAKMAK', 2, 1),
                        ('en', 1, 1), ('tr', 1, 1), ('.1302', 1, 1), ('.1547', 1, 1), ('.2256', 1, 1), ('.1731', 1, 1),
                        ('tr', 1, 1), ('en', 1, 1), ('.1479', 1, 1), ('.1571', 1, 1), ('.2661', 1, 1), ('.2665', 1, 1),
                ('Dictionary Induction (P@1)', 16, 1),
                    ('WIKITIONARY', 16, 1),
                        ('en', 1, 1), ('fr', 1, 1), ('.1096', 1, 1), ('.2176', 1, 1), ('.2475', 1, 1), ('.3125', 1, 1),
                        ('fr', 1, 1), ('en', 1, 1), ('.1305', 1, 1), ('.2358', 1, 1), ('.2762', 1, 1), ('.3466', 1, 1),
                        ('en', 1, 1), ('es', 1, 1), ('.0630', 1, 1), ('.1246', 1, 1), ('.2738', 1, 1), ('.3135', 1, 1),
                        ('es', 1, 1), ('en', 1, 1), ('.0650', 1, 1), ('.1399', 1, 1), ('.3012', 1, 1), ('.3574', 1, 1),
                        ('en', 1, 1), ('pt', 1, 1), ('.1384', 1, 1), ('.3869', 1, 1), ('.3281', 1, 1), ('.3866', 1, 1),
                        ('pt', 1, 1), ('en', 1, 1), ('.1573', 1, 1), ('.4119', 1, 1), ('.3661', 1, 1), ('.4190', 1, 1),
                        ('en', 1, 1), ('ar', 1, 1), ('.0385', 1, 1), ('.1364', 1, 1), ('.0995', 1, 1), ('.1364', 1, 1),
                        ('ar', 1, 1), ('en', 1, 1), ('.0722', 1, 1), ('.2408', 1, 1), ('.1958', 1, 1), ('.2825', 1, 1),
                        ('en', 1, 1), ('fi', 1, 1), ('.0213', 1, 1), ('.1280', 1, 1), ('.0887', 1, 1), ('.1367', 1, 1),
                        ('fi', 1, 1), ('en', 1, 1), ('.0527', 1, 1), ('.1877', 1, 1), ('.1597', 1, 1), ('.2477', 1, 1),
                        ('en', 1, 1), ('he', 1, 1), ('.0418', 1, 1), ('.1403', 1, 1), ('.0985', 1, 1), ('.1284', 1, 1),
                        ('he', 1, 1), ('en', 1, 1), ('.0761', 1, 1), ('.1791', 1, 1), ('.1701', 1, 1), ('.2179', 1, 1),
                        ('en', 1, 1), ('hu', 1, 1), ('.0533', 1, 1), ('.2299', 1, 1), ('.1679', 1, 1), ('.2182', 1, 1),
                        ('hu', 1, 1), ('en', 1, 1), ('.0810', 1, 1), ('.2759', 1, 1), ('.2234', 1, 1), ('.3204', 1, 1),
                        ('en', 1, 1), ('tr', 1, 1), ('.0567', 1, 1), ('.2207', 1, 1), ('.1770', 1, 1), ('.2245', 1, 1),
                        ('tr', 1, 1), ('en', 1, 1), ('.0851', 1, 1), ('.2598', 1, 1), ('.2069', 1, 1), ('.2835', 1, 1),
                ('Average*', 1, 4), ('.1640', 1, 1), ('.2505', 1, 1), ('.2856', 1, 1), ('.2867', 1, 1),
                ('Top 1', 1, 4), ('0', 1, 1), ('3.5', 1, 1), ('15', 1, 1), ('13.5', 1, 1)
            ]
        ], nrow=36, ncol=8, page_num=5)
    ],
    '62d0436733c81c53e093a333c8aa77f7ddee72c1': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Rank', 1, 1), ('Team', 1, 1), ('System', 1, 1), ('Accuracy', 1, 1), ('Precision', 1, 1), ('Recall', 1, 1), ('F-score', 1, 1), ('G-score', 1, 1),
                ('1', 1, 1), ('PLUJAGH', 1, 1), ('SEWDFF', 1, 1), ('0.922', 1, 1), ('0.289', 1, 1), ('0.453', 1, 1), ('0.353', 1, 1), ('0.608', 1, 1),
                ('2', 1, 1), ('LTG', 1, 1), ('System2', 1, 1), ('0.889', 1, 1), ('0.220', 1, 1), ('0.541', 1, 1), ('0.312', 1, 1), ('0.672', 1, 1),
                ('3', 1, 1), ('LTG', 1, 1), ('System1', 1, 1), ('0.933', 1, 1), ('0.300', 1, 1), ('0.321', 1, 1), ('0.310', 1, 1), ('0.478', 1, 1),
                ('4', 1, 1), ('MAZA', 1, 1), ('B', 1, 1), ('0.912', 1, 1), ('0.243', 1, 1), ('0.420', 1, 1), ('0.308', 1, 1), ('0.575', 1, 1),
                ('5', 1, 1), ('HMC', 1, 1), ('DecisionTree25', 1, 1), ('0.846', 1, 1), ('0.189', 1, 1), ('0.698', 1, 1), ('0.298', 1, 1), ('0.765', 1, 1),
                ('6', 1, 1), ('TALN', 1, 1), ('RandomForest_SIM.output', 1, 1), ('0.847', 1, 1), ('0.186', 1, 1), ('0.673', 1, 1), ('0.292', 1, 1), ('0.750', 1, 1),
                ('7', 1, 1), ('HMC', 1, 1), ('RegressionTree05', 1, 1), ('0.838', 1, 1), ('0.182', 1, 1), ('0.705', 1, 1), ('0.290', 1, 1), ('0.766', 1, 1),
                ('8', 1, 1), ('MACSAAR', 1, 1), ('RFC', 1, 1), ('0.825', 1, 1), ('0.168', 1, 1), ('0.694', 1, 1), ('0.270', 1, 1), ('0.754', 1, 1),
                ('9', 1, 1), ('TALN', 1, 1), ('RandomForest_WEI.output', 1, 1), ('0.812', 1, 1), ('0.164', 1, 1), ('0.736', 1, 1), ('0.268', 1, 1), ('0.772', 1, 1),
                ('10', 1, 1), ('UWB', 1, 1), ('All', 1, 1), ('0.803', 1, 1), ('0.157', 1, 1), ('0.734', 1, 1), ('0.258', 1, 1), ('0.767', 1, 1),
                ('11', 1, 1), ('PLUGJAGH', 1, 1), ('SEWDF', 1, 1), ('0.795', 1, 1), ('0.152', 1, 1), ('0.741', 1, 1), ('0.252', 1, 1), ('0.767', 1, 1),
                ('12', 1, 1), ('JUNLP', 1, 1), ('RandomForest', 1, 1), ('0.795', 1, 1), ('0.151', 1, 1), ('0.730', 1, 1), ('0.250', 1, 1), ('0.761', 1, 1),
                ('13', 1, 1), ('SV000gg', 1, 1), ('Soft', 1, 1), ('0.779', 1, 1), ('0.147', 1, 1), ('0.769', 1, 1), ('0.246', 1, 1), ('0.774', 1, 1),
                ('14', 1, 1), ('MACSAAR', 1, 1), ('NNC', 1, 1), ('0.804', 1, 1), ('0.146', 1, 1), ('0.660', 1, 1), ('0.240', 1, 1), ('0.725', 1, 1),
                ('15', 1, 1), ('JUNLP', 1, 1), ('NaiveBayes', 1, 1), ('0.767', 1, 1), ('0.139', 1, 1), ('0.767', 1, 1), ('0.236', 1, 1), ('0.767', 1, 1),
                ('16', 1, 1), ('SV000gg', 1, 1), ('Hard', 1, 1), ('0.761', 1, 1), ('0.138', 1, 1), ('0.787', 1, 1), ('0.235', 1, 1), ('0.773', 1, 1),
                ('17', 1, 1), ('USAAR', 1, 1), ('entropy', 1, 1), ('0.869', 1, 1), ('0.148', 1, 1), ('0.376', 1, 1), ('0.212', 1, 1), ('0.525', 1, 1),
                ('18', 1, 1), ('MAZA', 1, 1), ('A', 1, 1), ('0.773', 1, 1), ('0.115', 1, 1), ('0.578', 1, 1), ('0.192', 1, 1), ('0.661', 1, 1),
                ('19', 1, 1), ('BHASHA', 1, 1), ('DECISIONTREE', 1, 1), ('0.836', 1, 1), ('0.118', 1, 1), ('0.387', 1, 1), ('0.181', 1, 1), ('0.529', 1, 1),
                ('20', 1, 1), ('BHASHA', 1, 1), ('SVM', 1, 1), ('0.844', 1, 1), ('0.119', 1, 1), ('0.363', 1, 1), ('0.179', 1, 1), ('0.508', 1, 1)
            ]
        ], nrow=21, ncol=8, page_num=4)
    ],
    '81da82383812b9ad75d0548ec15f384128f7a6a1': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Type', 2, 1), ('Model', 2, 1), ('Languages', 1, 7), ('Average', 2, 1),
                ('de', 1, 1), ('en', 1, 1), ('es', 1, 1), ('fr', 1, 1), ('it', 1, 1), ('pt', 1, 1), ('sv', 1, 1),
                ('MONO', 2, 1),
                    ('UDPipe', 1, 1), ('82.9', 1, 1), ('87.5', 1, 1), ('87.1', 1, 1), ('84.5', 1, 1), ('90.2', 1, 1), ('87.2', 1, 1), ('86.2', 1, 1), ('86.5', 1, 1),
                    ('UParse', 1, 1), ('86.8', 1, 1), ('88.7', 1, 1), ('89.2', 1, 1), ('87.1', 1, 1), ('91.4', 1, 1), ('88.0', 1, 1), ('88.2', 1, 1), ('88.5', 1, 1),
                ('MULTI', 1, 1),
                    ('UParse', 1, 1), ('85.9', 1, 1), ('87.4', 1, 1), ('88.3', 1, 1), ('87.6', 1, 1), ('91.8', 1, 1), ('89.0', 1, 1), ('88.8', 1, 1), ('88.4', 1, 1)
            ]
        ], nrow=5, ncol=10, page_num=4),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Type', 2, 1), ('Model', 2, 1), ('Languages', 1, 7), ('Average', 2, 1),
                ('de', 1, 1), ('en', 1, 1), ('es', 1, 1), ('fr', 1, 1), ('it', 1, 1), ('pt', 1, 1), ('sv', 1, 1),
                ('MONO', 2, 1),
                    ('UDPipe', 1, 1), ('78.6', 1, 1), ('85.0', 1, 1), ('84.5', 1, 1), ('81.0', 1, 1), ('88.1', 1, 1), ('84.7', 1, 1), ('83.2', 1, 1), ('83.6', 1, 1),
                    ('UParse', 1, 1), ('80.4', 1, 1), ('85.5', 1, 1), ('85.5', 1, 1), ('83.1', 1, 1), ('88.9', 1, 1), ('84.2', 1, 1), ('82.7', 1, 1), ('84.3', 1, 1),
                ('MULTI', 2, 1),
                    ('MALOPA', 1, 1), ('78.9', 1, 1), ('85.4', 1, 1), ('84.3', 1, 1), ('82.4', 1, 1), ('89.1', 1, 1), ('86.2', 1, 1), ('84.5', 1, 1), ('84.4', 1, 1),
                    ('UParse', 1, 1), ('77.9', 1, 1), ('85.1', 1, 1), ('84.3', 1, 1), ('81.9', 1, 1), ('89.0', 1, 1), ('86.5', 1, 1), ('81.1', 1, 1), ('83.7', 1, 1)
            ]
        ], nrow=6, ncol=10, page_num=4),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Avg. UAS', 1, 1), ('Avg. LAS', 1, 1),
                ('Baseline', 1, 1), ('83.29', 1, 1), ('79.53', 1, 1),
                ('MONO', 1, 1), ('79.53', 1, 1), ('78.44', 1, 1),
                ('MULTI', 1, 1), ('85.76', 1, 1), ('77.55', 1, 1)
            ]
        ], nrow=4, ncol=3, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Avg. LAS', 1, 1),
                ('UP-1', 1, 1), ('73.66', 1, 1),
                ('UP-2', 1, 1), ('73.30', 1, 1),
                ('UP-3', 1, 1), ('73.29', 1, 1)
            ]
        ], nrow=4, ncol=2, page_num=7),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Metric', 1, 1), ('Score', 1, 1),
                ('LAS', 1, 1), ('68.87', 1, 1),
                ('UAS', 1, 1), ('75.49', 1, 1),
                ('CLAS', 1, 1), ('63.55', 1, 1)
            ]
        ], nrow=4, ncol=2, page_num=7)
    ],
    '220a47b587d1a5f4a464a04a4e06366059debeba': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 1), ('LP', 1, 1), ('LR', 1, 1), ('UP', 1, 1), ('UR', 1, 1),
                ('Clark', 1, 1), ('81.9%', 1, 1), ('81.8%', 1, 1), ('89.1%', 1, 1), ('90.1%', 1, 1),
                ('Hockenmaier', 1, 1), ('83.7%', 1, 1), ('84.2%', 1, 1), ('90.5%', 1, 1), ('91.1%', 1, 1)
            ]
        ], nrow=3, ncol=5, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 1), ('Baseline, Cutoff = 5\n(Missing = 463 sentences)', 1, 2), ('Baseline, Cutoff = 10\n(Missing = 387 sentences)', 1, 2), ('HWDep, Cutoff = 10\n(Missing = 387 sentences)', 1, 1),
                ('', 1, 1), ('Non-smoothed', 1, 1), ('Smoothed', 1, 1), ('Non-smoothed', 1, 1), ('Smoothed', 1, 1), ('Smoothed', 1, 1),
                ('Parse failures', 1, 1), ('6', 1, 1), ('-', 1, 1), ('5', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('<P,H,S>, All', 1, 1), ('75.7', 1, 1), ('73.2', 1, 1), ('76.2', 1, 1), ('76.3', 1, 1), ('83.9', 1, 1),
                ('<P,H,S>, Missing', 1, 1), ('66.4', 1, 1), ('64.2', 1, 1), ('67.0', 1, 1), ('67.1', 1, 1), ('75.1', 1, 1),
                ('<P,H,S>, No missing', 1, 1), ('78.5', 1, 1), ('75.9', 1, 1), ('78.5', 1, 1), ('78.6', 1, 1), ('86.6', 1, 1)
            ]
        ], nrow=6, ncol=6, page_num=8)
    ],
    '337d81402dedbb664e3ba0baddb761084588cbbb': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 2, 1), ('Overlap Match', 1, 3), ('Exact Match', 1, 3),
                ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1), ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                ('NEAREST-1', 1, 1), ('51.6', 1, 1), ('71.4', 1, 1), ('59.9', 1, 1), ('26.2', 1, 1), ('36.9', 1, 1), ('30.7', 1, 1),
                ('NEAREST-2', 1, 1), ('60.7', 1, 1), ('45.8', 1, 1), ('52.2', 1, 1), ('29.7', 1, 1), ('19.0', 1, 1), ('23.1', 1, 1),
                ('NEAREST-10', 1, 1), ('66.3', 1, 1), ('20.9', 1, 1), ('31.7', 1, 1), ('28.2', 1, 1), ('00.0', 1, 1), ('00.0', 1, 1),
                ('SRL', 1, 1), ('59.7', 1, 1), ('36.3', 1, 1), ('45.2', 1, 1), ('32.6', 1, 1), ('19.3', 1, 1), ('24.2', 1, 1),
                ('SRL+CRF+OP', 1, 1), ('45.6', 1, 1), ('83.2', 1, 1), ('58.9', 1, 1), ('27.6', 1, 1), ('49.7', 1, 1), ('35.5', 1, 1),
                ('ILP-1', 1, 1), ('51.6', 1, 1), ('80.8', 1, 1), ('63.0', 1, 1), ('26.4', 1, 1), ('42.0', 1, 1), ('32.4', 1, 1),
                ('ILP-10', 1, 1), ('64.0', 1, 1), ('72.4', 1, 1), ('68.0', 1, 1), ('31.0', 1, 1), ('34.8', 1, 1), ('32.8', 1, 1)
            ]
        ], nrow=9, ncol=7, page_num=7),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 2, 1), ('Overlap Match', 1, 3), ('Exact Match', 1, 3),
                ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1), ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                ('ILP-1', 1, 1), ('51.6', 1, 1), ('80.8', 1, 1), ('63.0', 1, 1), ('26.4', 1, 1), ('42.0', 1, 1), ('32.4', 1, 1),
                ('ILP-10', 1, 1), ('64.0', 1, 1), ('72.4', 1, 1), ('68.0', 1, 1), ('31.0', 1, 1), ('34.8', 1, 1), ('32.8', 1, 1),
                ('ILP+SRL-f-1', 1, 1), ('51.7', 1, 1), ('81.5', 1, 1), ('63.3', 1, 1), ('26.6', 1, 1), ('42.5', 1, 1), ('32.7', 1, 1),
                ('ILP+SRL-f-10', 1, 1), ('65.7', 1, 1), ('72.4', 1, 1), ('68.9', 1, 1), ('31.5', 1, 1), ('34.3', 1, 1), ('32.9', 1, 1),
                ('ILP+SRL-fc-10', 1, 1), ('64.0', 1, 1), ('73.5', 1, 1), ('68.4', 1, 1), ('28.4', 1, 1), ('31.3', 1, 1), ('29.8', 1, 1)
            ]
        ], nrow=7, ncol=7, page_num=7),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 2, 2), ('Opinion', 1, 3), ('Source', 1, 3), ('Link', 1, 3),
                    ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                    ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                    ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                ('Before IKP', 2, 1),
                    ('CRF-OP/SRC/LINK with 1 best', 1, 1),
                        ('76.4', 1, 1), ('88.4', 1, 1), ('81.9', 1, 1),
                        ('67.3', 1, 1), ('81.9', 1, 1), ('73.9', 1, 1),
                        ('60.5', 1, 1), ('50.5', 1, 1), ('55.0', 1, 1),
                    ('merged 10 best', 1, 1),
                        ('95.7', 1, 1), ('31.2', 1, 1), ('47.0', 1, 1),
                        ('95.3', 1, 1), ('24.5', 1, 1), ('38.9', 1, 1),
                        ('N/A', 1, 3),
                ('After ILP', 2, 1),
                    ('ILP-SRL-f-10', 1, 1),
                        ('75.1', 1, 1), ('82.9', 1, 1), ('78.8', 1, 1),
                        ('80.6', 1, 1), ('75.7', 1, 1), ('78.1', 1, 1),
                        ('65.7', 1, 1), ('72.4', 1, 1), ('68.9', 1, 1),
                    ('ILP-SRL-f-10∪CRF-OP/SRC with 1 best', 1, 1),
                        ('82.3', 1, 1), ('81.7', 1, 1), ('82.0', 1, 1),
                        ('81.5', 1, 1), ('73.4', 1, 1), ('77.3', 1, 1),
                        ('N/A', 1, 3)
            ]
        ], nrow=6, ncol=11, page_num=8),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 2, 1), ('Overlap Match', 1, 3), ('Exact Match', 1, 3),
                ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1), ('r(%)', 1, 1), ('p(%)', 1, 1), ('f(%)', 1, 1),
                ('DEV.CONF', 1, 1), ('65.7', 1, 1), ('72.4', 1, 1), ('68.9', 1, 1), ('31.5', 1, 1), ('34.3', 1, 1), ('32.9', 1, 1),
                ('NO.CONF', 1, 1), ('63.7', 1, 1), ('76.2', 1, 1), ('69.4', 1, 1), ('30.9', 1, 1), ('36.7', 1, 1), ('33.5', 1, 1)
            ]
        ], nrow=4, ncol=7, page_num=8)
    ],
    '8472e999f723a9ccaffc6089b7be1865d8a1b863': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('System', 1, 1), ('average F1', 1, 1), ('% broken test cases', 1, 1),
                ('Strawman', 1, 1), ('0.528', 1, 1), ('25.43', 1, 1),
                ('Phrase-based CNN', 1, 1), ('0.518', 1, 1), ('24.39', 1, 1),
                ('Bag-of-ngrams', 1, 1), ('0.510', 1, 1), ('24.74', 1, 1),
                ('Sentence-based CNN', 1, 1), ('0.490', 1, 1), ('28.57', 1, 1),
                ('DCNN', 1, 1), ('0.483', 1, 1), ('25.09', 1, 1),
                ('RNTN', 1, 1), ('0.457', 1, 1), ('25.96', 1, 1)
            ]
        ], nrow=7, ncol=3, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Breaker', 1, 1), ('score', 1, 1),
                ('Utrecht', 1, 1), ('31.17', 1, 1),
                ('OSU', 1, 1), ('28.66', 1, 1),
                ('Melbourne', 1, 1), ('19.28', 1, 1),
                ('Team 4', 1, 1), ('7.48', 1, 1)
            ]
        ], nrow=5, ncol=2, page_num=6)
    ],
    '29235d33c035494e0c594856136e84dde983990f': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('§', 2, 1), ('Category', 2, 1), ('Count', 2, 1), ('Precision', 1, 2), ('Recall', 1, 2), ('Accuracy', 1, 3),
                ('N', 1, 1), ('M08', 1, 1), ('N', 1, 1), ('M08', 1, 1), ('N', 1, 1), ('M07', 1, 1), ('M08', 1, 1),
                ('1', 1, 1), ('Quantifiers', 1, 1), ('44', 1, 1), ('91', 1, 1), ('95', 1, 1), ('100', 1, 1), ('100', 1, 1), ('95', 1, 1), ('84', 1, 1), ('97', 1, 1),
                ('2', 1, 1), ('Plurals', 1, 1), ('24', 1, 1), ('80', 1, 1), ('90', 1, 1), ('29', 1, 1), ('64', 1, 1), ('38', 1, 1), ('42', 1, 1), ('75', 1, 1),
                ('3', 1, 1), ('Anaphora', 1, 1), ('6', 1, 1), ('100', 1, 1), ('100', 1, 1), ('20', 1, 1), ('60', 1, 1), ('33', 1, 1), ('50', 1, 1), ('50', 1, 1),
                ('4', 1, 1), ('Ellipses', 1, 1), ('25', 1, 1), ('100', 1, 1), ('100', 1, 1), ('5', 1, 1), ('5', 1, 1), ('28', 1, 1), ('28', 1, 1), ('24', 1, 1),
                ('5', 1, 1), ('Adjectives', 1, 1), ('15', 1, 1), ('80', 1, 1), ('71', 1, 1), ('66', 1, 1), ('83', 1, 1), ('73', 1, 1), ('60', 1, 1), ('80', 1, 1),
                ('6', 1, 1), ('Comparatives', 1, 1), ('16', 1, 1), ('90', 1, 1), ('88', 1, 1), ('100', 1, 1), ('89', 1, 1), ('87', 1, 1), ('69', 1, 1), ('81', 1, 1),
                ('7', 1, 1), ('Temporal', 1, 1), ('36', 1, 1), ('75', 1, 1), ('86', 1, 1), ('53', 1, 1), ('71', 1, 1), ('52', 1, 1), ('61', 1, 1), ('58', 1, 1),
                ('8', 1, 1), ('Verbs', 1, 1), ('8', 1, 1), ('-', 1, 1), ('80', 1, 1), ('0', 1, 1), ('66', 1, 1), ('25', 1, 1), ('63', 1, 1), ('62', 1, 1),
                ('9', 1, 1), ('Attitudes', 1, 1), ('9', 1, 1), ('-', 1, 1), ('100', 1, 1), ('0', 1, 1), ('83', 1, 1), ('22', 1, 1), ('55', 1, 1), ('89', 1, 1),
                ('Applicable (1,5,6)', 1, 2), ('75', 1, 1), ('89', 1, 1), ('89', 1, 1), ('94', 1, 1), ('94', 1, 1), ('89', 1, 1), ('76', 1, 1), ('90', 1, 1)
            ]
        ], nrow=12, ncol=10, page_num=8),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('System', 1, 1), ('P', 1, 1), ('R', 1, 1), ('F1', 1, 1), ('Accuracy', 1, 1),
                ('Lookup', 1, 1), ('100.0', 1, 1), ('12.1', 1, 1), ('21.6', 1, 1), ('56.0', 1, 1),
                ('NaturalLI Only', 1, 1), ('88.8', 1, 1), ('40.1', 1, 1), ('55.2', 1, 1), ('67.5', 1, 1),
                ('NaturalLI + Lookup', 1, 1), ('90.6', 1, 1), ('49.1', 1, 1), ('63.7', 1, 1), ('72.0', 1, 1)
            ]
        ], nrow=4, ncol=5, page_num=9)
    ],
    '334200f861944bd6e48595669882d64bea0b4adc': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Evaluation Metric', 2, 1), ('Sentences Length', 1, 2), ('≤ 20', 1, 1), ('all', 1, 1),
                ('BLEU', 1, 1), ('0.7077', 1, 1), ('0.6651',1, 1),
                ('String Accuracy', 1, 1), ('0.7373', 1, 1), ('0.6808', 1, 1),
                ('Coverage', 1, 1), ('98.65', 1, 1), ('98.05', 1, 1)
            ]
        ], nrow=5, ncol=3, page_num=2),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Evaluation Metric', 2, 1), ('Sentences Length', 1, 2), ('≤ 20', 1, 1), ('all', 1, 1),
                ('BLEU', 1, 1), ('0.7227', 1, 1), ('0.6979',1, 1),
                ('String Accuracy', 1, 1), ('0.7476', 1, 1), ('0.7012', 1, 1),
                ('Coverage', 1, 1), ('95.26', 1, 1), ('89.49', 1, 1)
            ]
        ], nrow=5, ncol=3, page_num=2),
    ],
    '812965ddce635174b33621aaaa551e5f6199b6c0': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('', 1, 3), ('UNSUPERVISED', 1, 6), ('UPPER BOUNDS', 1, 4),
                ('', 1, 3), ('BASELINES', 1, 2), ('OUR SYSTEMS', 1, 4), ('WEAKLY SUP', 1, 2), ('SUPERVISED', 1, 2),
                ('', 1, 1), ('', 1, 1), ('OOV', 1, 1), ('BROWN', 1, 1), ('2HMM', 1, 1), ('TNT-k-SRC', 1, 1), ('TNT-n-1-SRC', 1, 1), ('GAR-k-SRC', 1, 1), ('GAR-n-1-SRC', 1, 1), ('DAS', 1, 1), ('LI', 1, 1), ('GAR', 1, 1), ('TNT', 1, 1),
                ('bul', 1, 1), ('YT', 1, 1), ('31.8', 1, 1), ('54.5', 1, 1), ('71.8', 1, 1), ('78.0', 1, 1), ('77.7', 1, 1), ('75.7', 1, 1), ('75.7', 1, 1), ('-', 1, 1), ('-', 1, 1), ('83.1', 1, 1), ('96.9', 1, 1),
                ('ces', 1, 1), ('YT', 1, 1), ('44.3', 1, 1), ('51.9', 1, 1), ('66.3', 1, 1), ('71.7', 1, 1), ('73.3', 1, 1), ('70.9', 1, 1), ('71.4', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('98.7', 1, 1),
                ('dan', 1, 1), ('YT', 1, 1), ('28.6', 1, 1), ('58.6', 1, 1), ('69.6', 1, 1), ('78.6', 1, 1), ('79.0', 1, 1), ('73.7', 1, 1), ('73.3', 1, 1), ('83.2', 1, 1), ('83.3', 1, 1), ('78.8', 1, 1), ('96.7', 1, 1),
                ('deu', 1, 1), ('YT', 1, 1), ('36.8', 1, 1), ('45.3', 1, 1), ('70.0', 1, 1), ('80.5', 1, 1), ('80.2', 1, 1), ('77.6', 1, 1), ('77.6', 1, 1), ('82.8', 1, 1), ('85.8', 1, 1), ('87.1', 1, 1), ('98.1', 1, 1),
                ('eng', 1, 1), ('YT', 1, 1), ('38.0', 1, 1), ('58.2', 1, 1), ('62.6', 1, 1), ('72.4', 1, 1), ('73.0', 1, 1), ('72.2', 1, 1), ('72.6', 1, 1), ('-', 1, 1), ('87.1', 1, 1), ('80.8', 1, 1), ('96.7', 1, 1),
                ('eus', 1, 1), ('NT', 1, 1), ('64.6', 1, 1), ('46.0', 1, 1), ('41.6', 1, 1), ('63.4', 1, 1), ('62.8', 1, 1), ('57.3', 1, 1), ('56.9', 1, 1), ('-', 1, 1), ('-', 1, 1), ('66.9', 1, 1), ('93.7', 1, 1),
                ('fra', 1, 1), ('YT', 1, 1), ('26.1', 1, 1), ('42.0', 1, 1), ('76.5', 1, 1), ('76.1', 1, 1), ('76.6', 1, 1), ('78.6', 1, 1), ('80.2', 1, 1), ('-', 1, 1), ('-', 1, 1), ('85.5', 1, 1), ('95.1', 1, 1),
                ('ell', 1, 1), ('YT', 1, 1), ('63.7', 1, 1), ('43.0', 1, 1), ('49.8', 1, 1), ('51.9', 1, 1), ('52.3', 1, 1), ('57.9', 1, 1), ('59.0', 1, 1), ('82.5', 1, 1), ('79.2', 1, 1), ('64.4', 1, 1), ('-', 1, 1),
                ('hin', 1, 1), ('Y', 1, 1), ('36.1', 1, 1), ('59.5', 1, 1), ('69.2', 1, 1), ('70.9', 1, 1), ('67.6', 1, 1), ('70.8', 1, 1), ('71.5', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('hrv', 1, 1), ('Y', 1, 1), ('34.7', 1, 1), ('52.8', 1, 1), ('65.6', 1, 1), ('67.8', 1, 1), ('67.1', 1, 1), ('67.2', 1, 1), ('66.7', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('hun', 1, 1), ('YT', 1, 1), ('41.2', 1, 1), ('45.9', 1, 1), ('57.4', 1, 1), ('70.0', 1, 1), ('70.4', 1, 1), ('71.3', 1, 1), ('72.0', 1, 1), ('-', 1, 1), ('-', 1, 1), ('77.9', 1, 1), ('95.6', 1, 1),
                ('isl', 1, 1), ('Y', 1, 1), ('19.7', 1, 1), ('42.6', 1, 1), ('65.9', 1, 1), ('70.6', 1, 1), ('69.0', 1, 1), ('68.7', 1, 1), ('68.3', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('ind', 1, 1), ('YT', 1, 1), ('29.4', 1, 1), ('52.6', 1, 1), ('73.1', 1, 1), ('76.6', 1, 1), ('76.8', 1, 1), ('74.9', 1, 1), ('76.0', 1, 1), ('-', 1, 1), ('-', 1, 1), ('87.1', 1, 1), ('95.1', 1, 1),
                ('ita', 1, 1), ('YT', 1, 1), ('24.0', 1, 1), ('45.1', 1, 1), ('78.3', 1, 1), ('76.5', 1, 1), ('76.9', 1, 1), ('78.5', 1, 1), ('79.2', 1, 1), ('86.8', 1, 1), ('86.5', 1, 1), ('83.5', 1, 1), ('95.8', 1, 1),
                ('plt', 1, 1), ('Y', 1, 1), ('35.0', 1, 1), ('48.9', 1, 1), ('56.4', 1, 1), ('56.6', 1, 1), ('62.0', 1, 1), ('64.6', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('mar', 1, 1), ('Y', 1, 1), ('33.0', 1, 1), ('55.8', 1, 1), ('45.8', 1, 1), ('52.0', 1, 1), ('52.9', 1, 1), ('52.8', 1, 1), ('52.3', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('nor', 1, 1), ('YT', 1, 1), ('27.5', 1, 1), ('56.1', 1, 1), ('73.0', 1, 1), ('77.0', 1, 1), ('76.7', 1, 1), ('75.4', 1, 1), ('76.0', 1, 1), ('-', 1, 1), ('-', 1, 1), ('84.3', 1, 1), ('97.7', 1, 1),
                ('pes', 1, 1), ('Y', 1, 1), ('33.6', 1, 1), ('57.9', 1, 1), ('61.5', 1, 1), ('59.3', 1, 1), ('59.3', 1, 1), ('59.6', 1, 1), ('59.1', 1, 1), ('60.8', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('pol', 1, 1), ('YT', 1, 1), ('36.4', 1, 1), ('52.2', 1, 1), ('68.7', 1, 1), ('75.6', 1, 1), ('75.1', 1, 1), ('70.8', 1, 1), ('74.0', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('95.7', 1, 1),
                ('por', 1, 1), ('YT', 1, 1), ('27.9', 1, 1), ('54.5', 1, 1), ('74.3', 1, 1), ('82.9', 1, 1), ('83.8', 1, 1), ('81.1', 1, 1), ('82.0', 1, 1), ('87.9', 1, 1), ('84.5', 1, 1), ('87.3', 1, 1), ('96.8', 1, 1),
                ('slv', 1, 1), ('Y', 1, 1), ('15.8', 1, 1), ('42.1', 1, 1), ('78.1', 1, 1), ('79.5', 1, 1), ('80.5', 1, 1), ('68.7', 1, 1), ('70.1', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1),
                ('spa', 1, 1), ('YT', 1, 1), ('21.9', 1, 1), ('52.6', 1, 1), ('47.3', 1, 1), ('81.1', 1, 1), ('81.4', 1, 1), ('82.6', 1, 1), ('82.6', 1, 1), ('84.2', 1, 1), ('86.4', 1, 1), ('88.7', 1, 1), ('96.2', 1, 1),
                ('srp', 1, 1), ('Y', 1, 1), ('41.7', 1, 1), ('59.3', 1, 1), ('47.3', 1, 1), ('69.6', 1, 1), ('69.2', 1, 1), ('67.9', 1, 1), ('67.2', 1, 1), ('-', 1, 1), ('-', 1, 1), ('-', 1, 1), ('94.7', 1, 1),
                ('swe', 1, 1), ('YT', 1, 1), ('31.5', 1, 1), ('58.5', 1, 1), ('68.4', 1, 1), ('74.7', 1, 1), ('75.2', 1, 1), ('71.4', 1, 1), ('71.9', 1, 1), ('80.5', 1, 1), ('86.1', 1, 1), ('76.1', 1, 1), ('94.7', 1, 1),
                ('tur', 1, 1), ('YT', 1, 1), ('41.6', 1, 1), ('53.7', 1, 1), ('46.8', 1, 1), ('60.5', 1, 1), ('61.3', 1, 1), ('56.5', 1, 1), ('57.9', 1, 1), ('-', 1, 1), ('-', 1, 1), ('72.2', 1, 1), ('89.1', 1, 1),
                ('average', 1, 2), ('≤ 50', 1, 1), ('52.2', 1, 1), ('64.4', 1, 1), ('72.1', 1, 1), ('72.2', 1, 1), ('70.8', 1, 1), ('71.5', 1, 1), ('', 1, 4)
            ]
        ], nrow=29, ncol=13, page_num=3)
    ],
    '0825788b9b5a18e3dfea5b0af123b5e939a4f564': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Dim.', 1, 1), ('Size', 1, 1), ('Sem.', 1, 1), ('Syn.', 1, 1), ('Tot.', 1, 1),
                ('ivLBL', 1, 1), ('100', 1, 1), ('1.5B', 1, 1), ('55.9', 1, 1), ('50.1', 1, 1), ('53.2', 1, 1),
                ('HPCA', 1, 1), ('100', 1, 1), ('1.6B', 1, 1), ('4.2', 1, 1), ('16.4', 1, 1), ('10.8', 1, 1),
                ('GloVe', 1, 1), ('100', 1, 1), ('1.6B', 1, 1), ('67.5', 1, 1), ('54.3', 1, 1), ('60.3', 1, 1),
                ('SG', 1, 1), ('300', 1, 1), ('1B', 1, 1), ('61', 1, 1), ('61', 1, 1), ('61', 1, 1),
                ('CBOW', 1, 1), ('300', 1, 1), ('1.6B', 1, 1), ('16.1', 1, 1), ('52.6', 1, 1), ('36.1', 1, 1),
                ('vLBL', 1, 1), ('300', 1, 1), ('1.5B', 1, 1), ('54.2', 1, 1), ('64.8', 1, 1), ('60.0', 1, 1),
                ('ivLBL', 1, 1), ('300', 1, 1), ('1.5B', 1, 1), ('65.2', 1, 1), ('63.0', 1, 1), ('64.0', 1, 1),
                ('GloVe', 1, 1), ('300', 1, 1), ('1.6B', 1, 1), ('80.8', 1, 1), ('61.5', 1, 1), ('70.3', 1, 1),
                ('SVD', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('6.3', 1, 1), ('8.1', 1, 1), ('7.3', 1, 1),
                ('SVD-S', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('36.7', 1, 1), ('46.6', 1, 1), ('42.1', 1, 1),
                ('SVD-L', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('56.6', 1, 1), ('63.0', 1, 1), ('60.1', 1, 1),
                ('CBOW†', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('63.6', 1, 1), ('67.4', 1, 1), ('65.7', 1, 1),
                ('SG†', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('73.0', 1, 1), ('66.0', 1, 1), ('69.1', 1, 1),
                ('GloVe', 1, 1), ('300', 1, 1), ('6B', 1, 1), ('77.4', 1, 1), ('67.0', 1, 1), ('71.7', 1, 1),
                ('CBOW', 1, 1), ('1000', 1, 1), ('6B', 1, 1), ('57.3', 1, 1), ('68.9', 1, 1), ('63.7', 1, 1),
                ('SG', 1, 1), ('1000', 1, 1), ('6B', 1, 1), ('66.1', 1, 1), ('65.1', 1, 1), ('65.6', 1, 1),
                ('SVD-L', 1, 1), ('300', 1, 1), ('42B', 1, 1), ('38.4', 1, 1), ('58.2', 1, 1), ('49.2', 1, 1),
                ('GloVe', 1, 1), ('300', 1, 1), ('42B', 1, 1), ('81.9', 1, 1), ('69.3', 1, 1), ('75.0', 1, 1)
            ]
        ], nrow=19, ncol=6, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Size', 1, 1), ('WS353', 1, 1), ('MC', 1, 1), ('RG', 1, 1), ('SCWS', 1, 1), ('RW', 1, 1),
                ('SVD', 1, 1), ('6B', 1, 1), ('35.3', 1, 1), ('35.1', 1, 1), ('42.5', 1, 1), ('38.3', 1, 1), ('25.6', 1, 1),
                ('SVD-S', 1, 1), ('6B', 1, 1), ('56.5', 1, 1), ('71.5', 1, 1), ('71.0', 1, 1), ('53.6', 1, 1), ('34.7', 1, 1),
                ('SVD-L', 1, 1), ('6B', 1, 1), ('65.7', 1, 1), ('72.7', 1, 1), ('75.1', 1, 1), ('56.5', 1, 1), ('37.0', 1, 1),
                ('CBOW†', 1, 1), ('6B', 1, 1), ('57.2', 1, 1), ('65.6', 1, 1), ('68.2', 1, 1), ('57.0', 1, 1), ('32.5', 1, 1),
                ('SG†', 1, 1), ('6B', 1, 1), ('62.8', 1, 1), ('65.2', 1, 1), ('69.7', 1, 1), ('58.1', 1, 1), ('37.2', 1, 1),
                ('GloVe', 1, 1), ('6B', 1, 1), ('65.8', 1, 1), ('72.7', 1, 1), ('77.8', 1, 1), ('53.9', 1, 1), ('38.1', 1, 1),
                ('SVD-L', 1, 1), ('42B', 1, 1), ('74.0', 1, 1), ('76.4', 1, 1), ('74.1', 1, 1), ('58.3', 1, 1), ('39.9', 1, 1),
                ('GloVe', 1, 1), ('42B', 1, 1), ('75.9', 1, 1), ('83.6', 1, 1), ('82.9', 1, 1), ('59.6', 1, 1), ('47.8', 1, 1),
                ('CBOW*', 1, 1), ('100B', 1, 1), ('68.4', 1, 1), ('79.6', 1, 1), ('75.4', 1, 1), ('59.4', 1, 1), ('45.5', 1, 1)
            ]
        ], nrow=10, ncol=7, page_num=8),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Model', 1, 1), ('Dev', 1, 1), ('Test', 1, 1), ('ACE', 1, 1), ('MUC7', 1, 1),
                ('Discrete', 1, 1), ('91.0', 1, 1), ('85.4', 1, 1), ('77.4', 1, 1), ('73.4', 1, 1),
                ('SVD', 1, 1), ('90.8', 1, 1), ('85.7', 1, 1), ('77.3', 1, 1), ('73.7', 1, 1),
                ('SVD-S', 1, 1), ('91.0', 1, 1), ('85.5', 1, 1), ('77.6', 1, 1), ('74.3', 1, 1),
                ('SVD-L', 1, 1), ('90.5', 1, 1), ('84.8', 1, 1), ('73.6', 1, 1), ('71.5', 1, 1),
                ('HPCA', 1, 1), ('92.6', 1, 1), ('88.7', 1, 1), ('81.7', 1, 1), ('80.7', 1, 1),
                ('HSMN', 1, 1), ('90.5', 1, 1), ('85.7', 1, 1), ('78.7', 1, 1), ('74.7', 1, 1),
                ('CW', 1, 1), ('92.2', 1, 1), ('87.4', 1, 1), ('81.7', 1, 1), ('80.2', 1, 1),
                ('CBOW', 1, 1), ('93.1', 1, 1), ('88.2', 1, 1), ('82.2', 1, 1), ('81.1', 1, 1),
                ('GloVe', 1, 1), ('93.2', 1, 1), ('88.3', 1, 1), ('82.9', 1, 1), ('82.2', 1, 1)
            ]
        ], nrow=10, ncol=5, page_num=9)
    ],
    'eda636e3abae829cf7ad8e0519fbaec3f29d1e82': [
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Language', 1, 1), ('TurboParser', 1, 1), ('Tensor-LSTM', 1, 1),
                ('English*', 1, 1), ('83.84', 1, 1), ('85.81', 1, 1),
                ('German', 1, 1), ('81.45', 1, 1), ('82.64', 1, 1),
                ('Danish', 1, 1), ('81.82', 1, 1), ('82.24', 1, 1),
                ('Finnish', 1, 1), ('77.74', 1, 1), ('78.83', 1, 1),
                ('Spanish', 1, 1), ('83.19', 1, 1), ('86.69', 1, 1),
                ('French', 1, 1), ('81.17', 1, 1), ('84.63', 1, 1),
                ('Czech', 1, 1), ('81.32', 1, 1), ('85.04', 1, 1),
                ('Average', 1, 1), ('81.50', 1, 1), ('83.70', 1, 1)
            ]
        ], nrow=9, ncol=3, page_num=6),
        Table.create_from_cells(cells=[
            text2cell(*tuple) for tuple in [
                ('Language', 1, 1), ('Delexicalized', 1, 1), ('TurboParser', 1, 1), ('Tensor-LSTM\n(Decoding)', 1, 1), ('Tensor-LSTM\n(No decoding)', 1, 1),
                ('Czech (cs)', 1, 1), ('40.99', 1, 1), ('43.81', 1, 1), ('42.58', 1, 1), ('41.54', 1, 1),
                ('Danish (da)', 1, 1), ('49.65', 1, 1), ('54.87', 1, 1), ('54.93', 1, 1), ('54.15', 1, 1),
                ('English* (en)', 1, 1), ('48.08', 1, 1), ('52.52', 1, 1), ('52.91', 1, 1), ('52.90', 1, 1),
                ('Finnish (fi)', 1, 1), ('41.18', 1, 1), ('46.08', 1, 1), ('43.98', 1, 1), ('45.26', 1, 1),
                ('French (fr)', 1, 1), ('48.97', 1, 1), ('45.83', 1, 1), ('55.06', 1, 1), ('53.83', 1, 1),
                ('German* (de)', 1, 1), ('49.36', 1, 1), ('51.79', 1, 1), ('54.87', 1, 1), ('53.85', 1, 1),
                ('Spanish (es)', 1, 1), ('47.60', 1, 1), ('58.90', 1, 1), ('59.60', 1, 1), ('57.81', 1, 1),
                ('Persian (fa)', 1, 1), ('28.93', 1, 1), ('14.88', 1, 1), ('46.47', 1, 1), ('48.60', 1, 1),
                ('Hebrew (he)', 1, 1), ('19.06', 1, 1), ('52.89', 1, 1), ('26.17', 1, 1), ('31.41', 1, 1),
                ('Hindi (hi)', 1, 1), ('21.03', 1, 1), ('43.31', 1, 1), ('43.21', 1, 1), ('46.09', 1, 1),
                ('Average', 1, 1), ('39.49', 1, 1), ('46.29', 1, 1), ('47.98', 1, 1), ('48.54', 1, 1)
            ]
        ], nrow=12, ncol=5, page_num=7)
    ]
}

